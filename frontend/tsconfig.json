{
    "compilerOptions": {
        "target": "es5",
        "lib": ["dom", "dom.iterable", "esnext"],
        "allowJs": true,
        "skipLibCheck": true,
        "esModuleInterop": true,
        "allowSyntheticDefaultImports": true,
        "forceConsistentCasingInFileNames": true,
        "module": "esnext",
        "moduleResolution": "node",
        "resolveJsonModule": true,
        "isolatedModules": true,
        "noEmit": true,
        "jsx": "react-jsx",

        /* Type Checking */
        "strict": true /* Enable all strict type-checking options. */,
        "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied `any` type.. */,
        "strictNullChecks": true /* When type checking, take into account `null` and `undefined`. */,
        "strictFunctionTypes": true /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */,
        // "strictBindCallApply": true,                      /* Check that the arguments for `bind`, `call`, and `apply` methods match the original function. */
        "strictPropertyInitialization": true /* Check for class properties that are declared but not set in the constructor. */,
        "noImplicitThis": true /* Enable error reporting when `this` is given the type `any`. */,
        "useUnknownInCatchVariables": true /* Type catch clause variables as 'unknown' instead of 'any'. */,
        // "alwaysStrict": true,                             /* Ensure 'use strict' is always emitted. */
        "noUnusedLocals": true /* Enable error reporting when a local variables aren't read. */,
        "noUnusedParameters": true /* Raise an error when a function parameter isn't read */,
        "noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,
        "noFallthroughCasesInSwitch": true /* Enable error reporting for fallthrough cases in switch statements. */,
        // "noUncheckedIndexedAccess": true /* Include 'undefined' in index signature results */
        // "noImplicitOverride": true,                       /* Ensure overriding members in derived classes are marked with an override modifier. */
        // "noPropertyAccessFromIndexSignature": true,       /* Enforces using indexed accessors for keys declared using an indexed type */
    },
    "include": ["src"]
}
